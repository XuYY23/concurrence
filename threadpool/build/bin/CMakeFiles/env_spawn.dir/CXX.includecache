#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../header/cancel.h
functional
-
memory
-
string
-
vector
-
status.h
../header/status.h
visibility.h
../header/visibility.h

../header/executor.h
cancel.h
../header/cancel.h
status.h
../header/status.h

../header/functional.h

../header/io_util.h
iostream
-
optional
-
status.h
../header/status.h
visibility.h
../header/visibility.h

../header/macros.h

../header/status.h
cstring
-
iostream
-

../header/thread_pool.h
unistd.h
-
cstdint
-
functional
-
future
-
memory
-
optional
-
queue
-
type_traits
-
utility
-
cancel.h
../header/cancel.h
functional.h
../header/functional.h
status.h
../header/status.h
visibility.h
../header/visibility.h
executor.h
../header/executor.h

../header/visibility.h

/home/king/cpp_concurrence/threadpool/examples/env_spawn.cc
iostream
-
mutex
-
thread
-
vector
-
cancel.h
/home/king/cpp_concurrence/threadpool/examples/cancel.h
io_util.h
/home/king/cpp_concurrence/threadpool/examples/io_util.h
macros.h
/home/king/cpp_concurrence/threadpool/examples/macros.h
thread_pool.h
/home/king/cpp_concurrence/threadpool/examples/thread_pool.h

/home/king/cpp_concurrence/threadpool/src/thread_pool.cc
algorithm
-
condition_variable
-
deque
-
list
-
mutex
-
string
-
thread
-
vector
-
thread_pool.h
/home/king/cpp_concurrence/threadpool/src/thread_pool.h
cancel.h
/home/king/cpp_concurrence/threadpool/src/cancel.h
io_util.h
/home/king/cpp_concurrence/threadpool/src/io_util.h
macros.h
/home/king/cpp_concurrence/threadpool/src/macros.h

